This file contains a summary of changes made and why.
2015Nov05 snap.f  Fixed a couple of bugs with Broadband. Bug with writing out 'rtime'. Index should be istn, was istnsk. 
                  Also setup name hardcoded to 'setupbb' if station has Mark6 disk. 
2015Apr04 snap.f  Removed special treatment if two consecutive scans involve the same source. 
2015Mar31 snap.f  Fixed several problmems with phase-referencing. These occured in going from 9.11.4-->9.11.5 when the logic was simplified.
2015Mar30 Many changes associated with Mark6  recording and some cleanup.
../skdrincl/statn.ftni   Added variables bb_bw, idata_mbps, isink_mbps
../skdrincl/valid_hardware.ftni      Added Mark6, RDBE 
../skdrut/kvalid_rack.f  Fixed a bug. Used unitilized variable 'iwhere' instead of 'i'.
../skdrut/kvalid_rec.f   Added implicit none 
../skdrut/stinp.f        Removed some tape stuff for S2 and K4. got rid of extraneous arguments. 
../skrut/write_return_if_needed.f     Replaced "End subroutine" with "end"
../skdrut/vobinp.f      Fixed a bug discovered in coding sked. 
../skdrut/unpvt.f       Got rid of various tape related stuff ro S2 and K4.

drcom.ftni              Got rid of unused 'iperm'.  
init_hardware_common.f, hardware.ftni.  Added support for Mark6.
snap.f                  Added support for Mark6
prtmp.f                 Do chmod of temporary file that will be printed.
drchmd.f                Removed unused argument in arg list.
skdshft.f               Removed unused argument in arg list of drchmod.f
point.f                 Removed unused argument in arg list to drchomd.
proc_from_sked.f        Routine to read sked file and write out procs embedded in it.
sread.f                 Aadded call to read_broad_band_section.f 
read_broadband_section.f   Read $BROADBAND section from sked file and extract idata_mbps and isink_mbps
find_recorder_speed.f   Return recorder speed (=isink_mbps) for Mark6 recorders.
drset.f                Added read of MARK6_OFF from $PARAM section of sked file.
snap_ready.f             modified for Mark6
-----------------------------------------------------------------------------------------------------------  

2015Jan29.  
../vmoinp.f  2014Dec09 change removed. Now all sidebands are treated as if normal LO. 
proc_disk_trakcs.f:   Flip sideband if inverted LOs. 
     
proc_trkf.f           Flip sideband for VEX if inverted LO. Previously only did for SKD files
proc_ifd.f            Added warning message if it doesn't find any valid LO inputs.
proc_mracks_vc.f      Added support for inverted Los. 
proc_disk_tracks.f, proc_trakcs.f 
                      Also added "ignore_mark5b_bad_mask"  flag. If mask is bad, will issue warning and continue. 
                      User needs to set flag in $misc section of skedf.ctl
procs.f               Previously did silent 'abort' if BBC frequencies were wrong. Now mushes on. 



2015Jan22 (Incorporate changes made from Jan13) Changes by JMG and JFHQ
Modifications to support astro2 and astro3 modes with DBBC 
BW written out to 3 places. Abort conditions all go to label 900.
../proc_disk_tracks.f 


2014Dec09 Changes to support 'inverted' IF.
../vmoinp.f.   Flip Sideband if LO freq>sky_freqls 

2014Dec06  Changes to support Mark5C. Affected files were:
proc_disk_tracks.f
fdrudg.f
proc_setup.f
proc_mk5_init1.f
proc_mk5_init2.f
proc_exper_initi.f
init_hardware_common.f
hardware.ftni
equip_type.ftni
../skdrut/stinp.f
../skdrut/ttape.f

2014Sep24
Increased number of modes from 20 to 40.  
../skdrincl/skparm.ftni  (max_frq =>40).
Removed warning message for about mode being not defined for a station.
../skdrut/itras.f
Fixed bug if VEX file did not define any passes, ie, PASS_ORDER not defined. 
../skdrut/gnpas.f

2014Jun02 proc_mracks_vc.f
This routine is called: call proc_mracks_vc(icode,ic,ib,ichan)
ic=channel #
ib=BBC #

The main idea is that this routine cycles through all channels one at a time and write lines like:
vc11=245.99,8.00,u
or
vc01=210.00,8.0,ul


To determine whether to write out "u", "l", or "ul" it checks to see if there are any channels that have the same channel # and bbc # that it was called with.  The code fragment that did the checking was:
        DO ichanx=ic,nchan(istn,icode) !remaining channels
           icx=invcx(ichanx,istn,icode) ! channel number
           if (ib.eq.ibbcx(icx,istn,icode)) then ! Same BBC?               
             if(itras(1,1,1,icx,1,istn,icode).ne.-99 .or. 
     >          itras(1,1,2,icx,1,istn,icode).ne.-99) ku=.true. 
             if(itras(2,1,1,icx,1,istn,icode).ne.-99 .or.
     >          itras(2,1,2,icx,1,istn,icode).ne.-99) kl=.true.                  
           endif
        enddo

This normally works because usually ic=ichan.   However in some cases ic>ichan, and hence it would not find the appropriate sideband in doing the check. (It would miss the channel number it was called with.) The routine was changed to start at 1.
Bug check:  Easiest to see the effect if you change the order of the 'codes' lines in a sked file. 






